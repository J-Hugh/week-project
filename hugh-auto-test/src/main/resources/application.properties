server.port= 80
server.servlet.context-path= /
server.error.path= error

#===DATASOURCE===#

spring.datasource.core.url= jdbc:mysql://127.0.0.1:3358/ldap_user?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true&useSSL=false
spring.datasource.core.username= root
spring.datasource.core.password= root123
spring.datasource.core.driver-class-name= com.mysql.jdbc.Driver
#申请连接的时候检测,如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.core.testWhileIdle= true
#申请连接时执行validationQuery检测连接是否有效
spring.datasource.core.testOnBorrow= false
#归还连接时执行validationQuery检测连接是否有效
spring.datasource.core.testOnReturn= false
#用来检测连接是否有效的sql
spring.datasource.core.validationQuery= select 10
#检测连接的间隔时间
spring.datasource.core.timeBetweenEvictionRunsMillis= 60000
#获取连接时最大等待时间
spring.datasource.core.maxWait= 5000
#初始化时建立物理连接的个数
spring.datasource.core.initialSize= 3
#最大连接池数量
spring.datasource.core.maxActive= 10


#===TEMPLATEMODE===#

spring.freemarker.request-context-attribute= req
#后缀名
spring.freemarker.suffix= .ftl
spring.freemarker.content-type= text/html
spring.freemarker.enabled= true
#缓存配置
spring.freemarker.cache= true
#模板加载路径 按需配置
spring.freemarker.template-loader-path= http://127.0.0.1:7070,classpath:/templates/
#是否优先从文件系统加载template，以支持热加载，默认为true
spring.freemarker.prefer-file-system-access=false
#编码格式
spring.freemarker.charset= UTF-8


